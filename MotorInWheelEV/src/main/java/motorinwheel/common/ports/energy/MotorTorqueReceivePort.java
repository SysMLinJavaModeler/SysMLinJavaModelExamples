







package motorinwheel.common.ports.energy;

import java.util.Optional;
import motorinwheel.common.events.MotorTorqueEvent;
import motorinwheel.common.signals.MotorTorqueSignal;
import motorinwheel.components.wheel.Wheel;
import sysmlinjava.blocks.SysMLBlock;
import sysmlinjava.common.SysMLSignal;
import sysmlinjava.events.SysMLSignalEvent;
import sysmlinjava.ports.SysMLFullPort;

/**
 * Port to receive the torque on the wheel from the motor
 * 
 * @author ModelerOne
 *
 */
public class MotorTorqueReceivePort extends SysMLFullPort
{
	/**
	 * Constructor
	 * 
	 * @param contextBlock      block in whose context the port resides
	 * @param eventContextBlock block to receive the receive events generated by
	 *                          this port
	 * @param id                unique ID
	 */
	public MotorTorqueReceivePort(SysMLBlock contextBlock, Wheel eventContextBlock, Long id)
	{
		super(contextBlock, Optional.of(eventContextBlock), id);
	}

	@Override
	protected SysMLSignalEvent eventFor(SysMLSignal signal)
	{
		SysMLSignalEvent result = null;
		if (signal instanceof MotorTorqueSignal)
			result = new MotorTorqueEvent(((MotorTorqueSignal)signal).torque);
		return result;
	}
}
